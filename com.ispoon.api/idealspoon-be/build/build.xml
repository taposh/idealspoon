<?xml version="1.0" encoding="UTF-8" ?>
<project basedir="." name="ifbbe" default="jar">

  <property environment="env"/>

  <!-- local use only -->
  <property file="build.properties" />

  <!-- environment use only -->
  <property file="envs/${env.PRODUCT_NAME}_${env.ENVIRONMENT_NAME}.properties"/>

  <!-- releng use only -->
  <property file="release.properties" />

  <!--  test/defaults  -->
  <property name="rel.archive.home" value="." />
  <property name="rel.app.name" value="ifbfe" />
  <property name="rel.package.name" value="${rel.app.name}-3.0_1666" />
  <property name="rel.package.type" value="tgz" />
  <property name="rel.opscommon.home" value="../opscommon" />
  <property name="rel.ifbdeploycommon.home" value="../ifbdeploycommon" />
  <!--<property name="rel.package.zip" value="true"/>-->
  <!--<property name="rel.package.tgz" value="true"/>-->

  <property name="tools.path" value="${rel.tools.home}" />

  <!-- build targets -->

  <target name="clean" description="Remove all generated files">
    <echo message="noop" />
  </target>

  <target name="init" description="Pre-compile initializations">
    <echo message="noop" />
  </target>

  <target name="compile" depends="init" description="Generate all classes">
    <echo message="noop" />
  </target>

  <target name="mvn" description="Execute mvn command">
    <echo message="os.name: ${os.name}"/>
    <condition property="mvn.test.value" value="test" else="-DskipTests">
        <and>
            <equals arg1="${rel.maven.test}" arg2="true"/>
        </and>
    </condition>
    <echo message = "mvn.test.value: ${mvn.test.value}" />
    <exec dir="../" executable="${M2_HOME}/bin/mvn" os="Linux" failonerror="true">
      <arg value="${mvn.test.value}"/>
      <arg value="clean"/>
      <arg value="package"/>
    </exec>
    <exec dir="../" executable="${M2_HOME}/bin/mvn.bat" os="Windows 7" failonerror="true">
      <arg value="${mvn.test.value}"/>
      <arg value="clean"/>
      <arg value="package"/>
    </exec>
  </target>

  <target name="jar.dependencies" description="Jar dependencies">
    <ant antfile="build.xml" dir="${rel.opscommon.home}/utils/aws/build" inheritAll="flase"/>
  </target>

  <target name="jar" depends="compile" description="Jar utilities">
    <echo message="noop" />
  </target>

  <target name="test" depends="jar" description="Run junit tests">
    <echo message="noop" />
  </target>

  <!-- deploy targets -->

  <target name="release.build" description="Build and package the application">
    <antcall target="clean" />
    <antcall target="jar.dependencies" />
    <antcall target="jar" />
    <antcall target="mvn" />
    <antcall target="config" />
    <antcall target="stage" />
    <antcall target="package" />
  </target>

  <target name="package" description="Package the application">
    <antcall target="package.zip" />
    <antcall target="package.tgz" />
  </target>

  <!-- config/run targets -->

  <target name="start">
    <echo message="noop" />
  </target>

  <target name="stop">
    <echo message="noop" />
  </target>
  
  <target name="config" description="Localize">
  </target>

  <!-- packaging targets -->

  <target name="stage" description="Stage distribution for packaging">

    <delete dir="stage" />

    <copy todir="stage/${rel.app.name}" preservelastmodified="true" verbose="${ant.verbose}">
      <fileset dir="..">
        <include name="**/*" />
        <include name="build/**/*" />
        <exclude name="build/stage" />
        <exclude name="build/build.properties" />
      </fileset>
    </copy>
    <copy todir="stage/${rel.app.name}/deploy/opscommon" preservelastmodified="true" verbose="${ant.verbose}">
      <fileset dir="${rel.opscommon.home}">
        <include name="**/*" />
        <exclude name="**/src/**" />
      </fileset>
    </copy>
    <copy todir="stage/${rel.app.name}/deploy/ifbdeploycommon" preservelastmodified="true" verbose="${ant.verbose}">
      <fileset dir="${rel.ifbdeploycommon.home}">
        <include name="**/*" />
      </fileset>
    </copy>
    <!-- duplicates the staged file to ifbbedemo -->
    <copy todir="stage/${rel.app.name}demo" preservelastmodified="true" verbose="${ant.verbose}">
      <fileset dir="stage/${rel.app.name}">
        <include name="**/*" />
      </fileset>
    </copy>
  </target>

  <target name="package.tgz" if="rel.package.tgz" description="Create the TGZ for deployment">
    <mkdir dir="${rel.archive.home}/${rel.app.name}" />
    <tar destfile="${rel.archive.home}/${rel.app.name}/${rel.package.name}.${rel.package.type}" compression="gzip">
      <tarfileset dir="stage" mode="755">
        <include name="${rel.app.name}/**/*.sh" />
      </tarfileset>
      <tarfileset dir="stage">
        <include name="**" />
        <exclude name="${rel.app.name}/**/*.sh" />
      </tarfileset>
    </tar>
  </target>

  <target name="package.zip" if="rel.package.zip" description="Create a ZIP package for deployment">
    <mkdir dir="${rel.archive.home}/${rel.app.name}" />
    <zip destfile="${rel.archive.home}/${rel.app.name}/${rel.package.name}.${rel.package.type}" basedir="stage" />
  </target>

</project>
