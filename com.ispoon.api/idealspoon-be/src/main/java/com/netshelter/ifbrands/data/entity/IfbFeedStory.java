package com.netshelter.ifbrands.data.entity;
// Generated Apr 12, 2013 12:26:23 PM by Hibernate Tools 3.2.4.GA


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * IfbFeedStory generated by hbm2java
 */
@Entity
@Table(name="ifb_feed_story"
    , uniqueConstraints = @UniqueConstraint(columnNames={"feed_id", "dp_story_id"}) 
)
public class IfbFeedStory  implements java.io.Serializable {


     private Integer feedStoryId;
     private IfbFeedStoryStatus ifbFeedStoryStatus;
     private IfbFeed ifbFeed;
     private int ordinal;
     private int dpStoryId;
     private String updateSource;
     private Boolean ignoreBot;
     private Date createTimestamp;
     private Date updateTimestamp;

    public IfbFeedStory() {
    }

	
    public IfbFeedStory(IfbFeedStoryStatus ifbFeedStoryStatus, IfbFeed ifbFeed, int ordinal, int dpStoryId, Date createTimestamp, Date updateTimestamp) {
        this.ifbFeedStoryStatus = ifbFeedStoryStatus;
        this.ifbFeed = ifbFeed;
        this.ordinal = ordinal;
        this.dpStoryId = dpStoryId;
        this.createTimestamp = createTimestamp;
        this.updateTimestamp = updateTimestamp;
    }
    public IfbFeedStory(IfbFeedStoryStatus ifbFeedStoryStatus, IfbFeed ifbFeed, int ordinal, int dpStoryId, String updateSource, Boolean ignoreBot, Date createTimestamp, Date updateTimestamp) {
       this.ifbFeedStoryStatus = ifbFeedStoryStatus;
       this.ifbFeed = ifbFeed;
       this.ordinal = ordinal;
       this.dpStoryId = dpStoryId;
       this.updateSource = updateSource;
       this.ignoreBot = ignoreBot;
       this.createTimestamp = createTimestamp;
       this.updateTimestamp = updateTimestamp;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="feed_story_id", unique=true, nullable=false)
    public Integer getFeedStoryId() {
        return this.feedStoryId;
    }
    
    public void setFeedStoryId(Integer feedStoryId) {
        this.feedStoryId = feedStoryId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="feed_story_status_id", nullable=false)
    public IfbFeedStoryStatus getIfbFeedStoryStatus() {
        return this.ifbFeedStoryStatus;
    }
    
    public void setIfbFeedStoryStatus(IfbFeedStoryStatus ifbFeedStoryStatus) {
        this.ifbFeedStoryStatus = ifbFeedStoryStatus;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="feed_id", nullable=false)
    public IfbFeed getIfbFeed() {
        return this.ifbFeed;
    }
    
    public void setIfbFeed(IfbFeed ifbFeed) {
        this.ifbFeed = ifbFeed;
    }

    
    @Column(name="ordinal", nullable=false)
    public int getOrdinal() {
        return this.ordinal;
    }
    
    public void setOrdinal(int ordinal) {
        this.ordinal = ordinal;
    }

    
    @Column(name="dp_story_id", nullable=false)
    public int getDpStoryId() {
        return this.dpStoryId;
    }
    
    public void setDpStoryId(int dpStoryId) {
        this.dpStoryId = dpStoryId;
    }

    
    @Column(name="update_source", length=256)
    public String getUpdateSource() {
        return this.updateSource;
    }
    
    public void setUpdateSource(String updateSource) {
        this.updateSource = updateSource;
    }

    
    @Column(name="ignore_bot")
    public Boolean getIgnoreBot() {
        return this.ignoreBot;
    }
    
    public void setIgnoreBot(Boolean ignoreBot) {
        this.ignoreBot = ignoreBot;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_timestamp", nullable=false, length=19)
    public Date getCreateTimestamp() {
        return this.createTimestamp;
    }
    
    public void setCreateTimestamp(Date createTimestamp) {
        this.createTimestamp = createTimestamp;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_timestamp", nullable=false, length=19)
    public Date getUpdateTimestamp() {
        return this.updateTimestamp;
    }
    
    public void setUpdateTimestamp(Date updateTimestamp) {
        this.updateTimestamp = updateTimestamp;
    }




}


