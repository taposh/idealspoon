<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
  	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:aws.properties</value>
				<value>classpath:jdbc.properties</value>
				<value>classpath:ifbrands.properties</value>
                <value>classpath:quartz.properties</value>
				<value>classpath:ifbrands-environment.properties</value>
			</list>
		</property>
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
		<property name="ignoreResourceNotFound" value="true" />
	</bean>

	<!-- BuildVersion -->
	<util:properties id="buildProperties" location="classpath:build.properties"/>
	<bean id="buildVersion" class="com.netshelter.ifbrands.BuildVersion">
		<property name="buildProperties" ref="buildProperties"/>
	</bean>

	<!-- StatsD Client (static singleton) -->
	<bean id="statsdClient" class="com.netshelter.stats.statsd.StatsdClient">
		<constructor-arg value="${statsd.host:}"/>
		<constructor-arg value="${statsd.port:}"/>
		<constructor-arg value="${statsd.root:}"/>
	</bean>
	<bean id="statsStatic" class="com.netshelter.stats.StatsStatic" factory-method="setClient">
		<constructor-arg ref="statsdClient"/>
	</bean>
			
	<bean id="keyGenerator" class="com.netshelter.ifbrands.util.KeyGeneratorUtils$SimpleKeyGenerator"/>

    <bean id="rejectedExecutionHandler" class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />

	<!-- ExecutorService (via Factory Bean).
	     This is a app-wide pool so the bigger this gets, 
	     the smaller Tomcat's request pool can be. -->
	<bean id="executor" class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean"
          destroy-method="destroy">
		<property name="maxPoolSize" value="${ifb.executor.threads}"/>
		<property name="corePoolSize" value="${ifb.executor.threads}"/>
		<property name="threadGroupName" value="ifb"/>
        <property name="rejectedExecutionHandler" ref="rejectedExecutionHandler"/>
        <property name="queueCapacity" value="0"/>
        <!--<property name="queueCapacity" value="9999"/>-->
		<property name="threadNamePrefix" value="ExThrd-"/>
	</bean>

    <bean name="liftCalculatorUtils" class="com.netshelter.ifbrands.api.util.LiftCalculatorUtils"/>

	<!-- Enable AOP -->
	<aop:aspectj-autoproxy/>
	
	<!-- Auto Scanning -->
	<context:component-scan base-package="com.netshelter.ifbrands" />
</beans>